#!/usr/bin/env python3
"""
Comprehensive test for improved Spanish question detection
"""

from punctuation_restorer import restore_punctuation

def test_spanish_questions():
    """Test various Spanish question patterns."""
    
    print("Testing Improved Spanish Question Detection")
    print("=" * 60)
    
    # Test cases covering different Spanish question patterns
    test_cases = [
        # Basic question words
        {
            'input': "qu√© hora es la reuni√≥n ma√±ana",
            'description': 'Basic question word (qu√©)',
            'expected': True
        },
        {
            'input': "d√≥nde est√° la oficina",
            'description': 'Basic question word (d√≥nde)',
            'expected': True
        },
        {
            'input': "cu√°ndo es la cita",
            'description': 'Basic question word (cu√°ndo)',
            'expected': True
        },
        {
            'input': "c√≥mo est√°s hoy",
            'description': 'Basic question word (c√≥mo)',
            'expected': True
        },
        {
            'input': "qui√©n puede ayudarme",
            'description': 'Basic question word (qui√©n)',
            'expected': True
        },
        {
            'input': "cu√°l es tu nombre",
            'description': 'Basic question word (cu√°l)',
            'expected': True
        },
        
        # Question patterns with verbs
        {
            'input': "puedes enviarme la agenda",
            'description': 'Question pattern (puedes)',
            'expected': True
        },
        {
            'input': "podr√≠as explicar esto",
            'description': 'Question pattern (podr√≠as)',
            'expected': True
        },
        {
            'input': "vas a venir ma√±ana",
            'description': 'Question pattern (vas a)',
            'expected': True
        },
        {
            'input': "tienes tiempo para reunirte",
            'description': 'Question pattern (tienes)',
            'expected': True
        },
        {
            'input': "necesitas ayuda con esto",
            'description': 'Question pattern (necesitas)',
            'expected': True
        },
        {
            'input': "sabes d√≥nde queda",
            'description': 'Question pattern (sabes)',
            'expected': True
        },
        {
            'input': "hay algo m√°s que necesites",
            'description': 'Question pattern (hay)',
            'expected': True
        },
        {
            'input': "est√° todo bien contigo",
            'description': 'Question pattern (est√°)',
            'expected': True
        },
        {
            'input': "te gusta esta idea",
            'description': 'Question pattern (te gusta)',
            'expected': True
        },
        {
            'input': "quieres que vayamos juntos",
            'description': 'Question pattern (quieres)',
            'expected': True
        },
        {
            'input': "te parece bien la propuesta",
            'description': 'Question pattern (te parece)',
            'expected': True
        },
        {
            'input': "crees que es correcto",
            'description': 'Question pattern (crees)',
            'expected': True
        },
        {
            'input': "piensas que funcionar√°",
            'description': 'Question pattern (piensas)',
            'expected': True
        },
        
        # Question word combinations
        {
            'input': "qu√© hora es la reuni√≥n",
            'description': 'Question word combination (qu√© hora)',
            'expected': True
        },
        {
            'input': "d√≥nde est√° la reuni√≥n",
            'description': 'Question word combination (d√≥nde est√°)',
            'expected': True
        },
        {
            'input': "cu√°ndo es la cita",
            'description': 'Question word combination (cu√°ndo es)',
            'expected': True
        },
        {
            'input': "c√≥mo est√° todo",
            'description': 'Question word combination (c√≥mo est√°)',
            'expected': True
        },
        {
            'input': "qui√©n puede ayudarme",
            'description': 'Question word combination (qui√©n puede)',
            'expected': True
        },
        {
            'input': "cu√°l es tu preferencia",
            'description': 'Question word combination (cu√°l es)',
            'expected': True
        },
        
        # Non-questions (should not be detected as questions)
        {
            'input': "hola como est√°s hoy",
            'description': 'Greeting (not a question)',
            'expected': False
        },
        {
            'input': "gracias por tu ayuda",
            'description': 'Thank you (not a question)',
            'expected': False
        },
        {
            'input': "el proyecto est√° terminado",
            'description': 'Statement (not a question)',
            'expected': False
        },
        {
            'input': "necesito m√°s informaci√≥n",
            'description': 'Statement (not a question)',
            'expected': False
        },
        {
            'input': "la reuni√≥n es ma√±ana",
            'description': 'Statement (not a question)',
            'expected': False
        }
    ]
    
    correct_detections = 0
    total_tests = len(test_cases)
    
    for i, test_case in enumerate(test_cases, 1):
        input_text = test_case['input']
        description = test_case['description']
        expected = test_case['expected']
        
        print(f"\nTest {i}: {description}")
        print(f"Input:  {input_text}")
        
        try:
            result = restore_punctuation(input_text, 'es')
            print(f"Output: {result}")
            
            # Check if question was detected
            is_question = '?' in result
            print(f"Question detected: {is_question}")
            print(f"Expected: {expected}")
            
            if is_question == expected:
                print("‚úì CORRECT")
                correct_detections += 1
            else:
                print("‚úó INCORRECT")
                
        except Exception as e:
            print(f"‚úó Error: {e}")
        
        print("-" * 40)
    
    # Summary
    accuracy = correct_detections / total_tests
    print(f"\n{'='*60}")
    print("SPANISH QUESTION DETECTION SUMMARY")
    print(f"{'='*60}")
    print(f"Total tests: {total_tests}")
    print(f"Correct detections: {correct_detections}")
    print(f"Accuracy: {accuracy:.1%}")
    
    if accuracy >= 0.8:
        print("üéâ Excellent Spanish question detection!")
    elif accuracy >= 0.6:
        print("‚úÖ Good Spanish question detection")
    else:
        print("‚ö†Ô∏è Spanish question detection needs improvement")

if __name__ == "__main__":
    test_spanish_questions() 